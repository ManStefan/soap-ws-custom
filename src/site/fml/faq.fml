<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2012-2013 Reficio (TM) - Reestablish your software!. All Rights Reserved.

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<faqs xmlns="http://maven.apache.org/FML/1.0.1"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://maven.apache.org/FML/1.0.1 http://maven.apache.org/xsd/fml-1.0.1.xsd"
      title="Frequently Asked Questions"
      toplink="false">

    <part id="general">
        <title>General</title>

        <faq id="whats-is-soap-ws">
            <question>
                What is soap-ws?
            </question>
            <answer>
                <p>
                soap-ws is a lightweight and easy-to-use Java library to handle SOAP message generation and SOAP message transmission
                on a purely XML level. With the usage of this library within few lines of code you can easily import your WSDL and generate
                SOAP messages directly in an XML format. Then you can use the SoapClient to transmit this message over HTTP(s) to a web-service
                endpoint. Finally, you can run SoapServer to receive SOAP messages and and respond to them. And all of that requires no classes
                or stubs generation - everything happens directly in an XML format.
                </p>
            </answer>
        </faq>

        <faq id="why-should-i-bother">
            <question>
                What should I bother?
            </question>
            <answer>
                Have a look at this:
                <ul>
                    <li>Have you ever had problems with the versioning of web-service endpoints? Have you ever had to address the problem how to deal with many versions of the same classes generated from two versions of the same WSDL in one code base? Did you try to prefix the classes, change the package, or do any other mambo-jumbo tricks that are clearly against the best-practices of software design?</li>
                    <li>Have you every tried to chain and orchestrate a few web-service invocations applying some XSLT transformation to the consecutive responses forwarding them to the next endpoint? Have you ever seen how cumbersome it is using Java generated ws clients/servers?</li>
                    <li>Have you ever had to re-generate the ws-stubs, recompile and redeploy you application because of a tiny change in the WSDL?</li>
                    <li>Have you every been confused why you generate all these domain and stub classes to invoke one simple web-service operation and to get a plain response that could be processed with XSTL one-liner?</li>
                    <li>Have you ever had to had to send a simple XML message to a SOAP server in a fire and forget mode?</li>
                    <li>Have you ever had to expose a mock SOAP endpoint that would respond to the request sending a sample response -let's say in an unit test?</li>
                    <li>Have you ever had to download a hierarchical WSDL file with hierarchical XSD schemas and store it on your local hard drive with all the import and includes fixed properly so that you can reuse it locally?</li>
                    <li>Have you everâ€¦</li>
                </ul>
                <p>
                    Yes, that's what soap-ws can do for you. But it can do much more, just dive in and check the plethora of stuff that we have implemented.
                </p>
            </answer>
        </faq>

        <faq id="how-can-i-hack-around">
            <question>
                How can I hack around?
            </question>
            <answer>
                Try here:
                <ul>
                    <li>GitHub -> https://github.com/reficio/soap-ws</li>
                    <li>Jenkins -> https://reficio.ci.cloudbees.com/job/soap-ws</li>
                    <li>Site -> http://projects.reficio.org/soap-ws/1.0.0-SNAPSHOT</li>
                </ul>
            </answer>
        </faq>
    </part>

</faqs>
